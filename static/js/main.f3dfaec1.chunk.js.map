{"version":3,"sources":["components/RenderRoute.js","components/Footer.js","contexts/topoccurrence/topOccursInitialState.js","contexts/topoccurrence/topOccursActions.js","contexts/topoccurrence/topOccursReducer.js","contexts/winnums/winNumsInitialState.js","contexts/winnums/winNumsActions.js","contexts/winnums/winNumsReducer.js","contexts/winnumscombo/winNumsCombosInitialState.js","contexts/winnumscombo/winNumsCombosActions.js","contexts/winnumscombo/winNumsCombosReducer.js","contexts/Provider.js","utils/axiosHelper.js","services/getWinNumsCombos.js","components/NavBar.js","utils/appUtils.js","components/WinNumsCombosList.js","services/getTopOccurs.js","services/getWinNums.js","components/WinNumsList.js","components/routes.js","views/OccursPage.js","views/AboutPage.js","views/WinNumsPage.js","App.js","index.js"],"names":["RenderRoute","route","path","component","title","document","tile","exact","Footer","Grid","divided","Row","columns","Column","textAlign","verticalAlign","Date","getFullYear","Icon","size","name","topOccursInitialState","loading","data","error","GET_TOP_OCCURS_LOADING","GET_TOP_OCCURS_SUCCESS","GET_TOP_OCCURS_ERROR","topOccursReducer","state","type","payload","winNumsInitialState","GET_WIN_NUMS_LOADING","GET_WIN_NUMS_SUCCESS","GET_WIN_NUMS_ERROR","CONNECTION_ERROR","winNumsReducer","winNumsCombosInitialState","GET_WIN_NUMS_COMBOS_LOADING","GET_WIN_NUMS_COMBOS_SUCCESS","GET_WIN_NUMS_COMBOS_ERROR","CLEAR_SEARCH","winNumsCombosReducer","Context","createContext","Provider","children","useReducer","winNumsState","winNumsDispatch","winNumsCombosState","winNumsCombosDispatch","topOccursState","topOccursDispatch","useState","game","setGame","search","setSearch","value","axiosHelper","axios","create","baseURL","process","headers","interceptors","response","use","res","Promise","resolve","err","reject","getWinNumsCombos","numbers","dispatch","get","then","catch","NavBar","useContext","searchNumbersValid","length","useEffect","Menu","secondary","pointing","Item","header","style","fontSize","position","id","Form","Group","Dropdown","options","key","text","defaultValue","simple","item","onChange","e","Input","width","placeholder","Button","primary","onClick","searchNumbers","cleanedSearch","trim","replace","split","sort","map","padStart","join","cleanedSearchNumbers","disabled","as","NavLink","to","WinNumsCombosList","Container","marginBottom","Header","Placeholder","image","Line","Paragraph","count","Table","celled","HeaderCell","results","number_of_draws","Body","nums","Cell","winning_numbers_combination","winning_numbers_combination_occurrence","possibility","Message","content","getTopOccurs","getWinNums","WinNumsList","date","draw_date","toLocaleDateString","winning_numbers","ball","multiplier","routes","App","className","from","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f3dfaec1.chunk.js","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\n\nconst RenderRoute = (route) => {\n\n    const { path, component, title } = route\n    document.tile = title || 'Lotto Combo Search'\n\n    return (\n        <Route path={path} exact component={component} />\n    )\n}\n\nexport default RenderRoute\n","import React from 'react'\nimport { Grid, Icon } from 'semantic-ui-react'\n\nconst Footer = () => {\n    return (\n        <Grid divided='vertically'>\n            <Grid.Row columns={2}>\n                <Grid.Column textAlign=\"right\" verticalAlign=\"middle\">\n                    Lotto Combos © {new Date().getFullYear()}\n                </Grid.Column>\n                <Grid.Column>\n                    <Icon size=\"big\" name=\"user circle\"></Icon>\n                    Tae Hee Choi\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n\n\n\n    )\n}\n\nexport default Footer\n","const topOccursInitialState = {\n    loading: false,\n    data: [],\n    error: null\n}\n\nexport default topOccursInitialState","export const GET_TOP_OCCURS_LOADING = 'GET_TOP_OCCURS_LOADING'\nexport const GET_TOP_OCCURS_SUCCESS = 'GET_TOP_OCCURS_SUCCESS'\nexport const GET_TOP_OCCURS_ERROR = 'GET_TOP_OCCURS_ERROR'\n","import { GET_TOP_OCCURS_ERROR, GET_TOP_OCCURS_LOADING, GET_TOP_OCCURS_SUCCESS } from \"./topOccursActions\"\n\n\nconst topOccursReducer = (state, {type, payload}) => {\n    switch(type){\n        case GET_TOP_OCCURS_LOADING:\n            return{\n                ...state,\n                loading: true,\n                error: false,\n            }\n        case GET_TOP_OCCURS_SUCCESS:\n            return{\n                ...state,\n                loading: false,\n                data: payload\n            }\n        case GET_TOP_OCCURS_ERROR:\n            return{\n                ...state,\n                loading: false,\n                error: payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default topOccursReducer","const winNumsInitialState = {\n    loading: false,\n    data: [],\n    error: null\n}\n\nexport default winNumsInitialState","export const GET_WIN_NUMS_LOADING = 'GET_WIN_NUMS_LOADING'\nexport const GET_WIN_NUMS_SUCCESS = 'GET_WIN_NUMS_SUCCESS'\nexport const GET_WIN_NUMS_ERROR = 'GET_WIN_NUMS_ERROR'\nexport const CONNECTION_ERROR = \"Could not connect\";","import { GET_WIN_NUMS_ERROR, GET_WIN_NUMS_LOADING, GET_WIN_NUMS_SUCCESS } from \"././winNumsActions\";\n\nconst winNumsReducer = (state, {type, payload}) => {\n    switch(type){\n        case GET_WIN_NUMS_LOADING:\n            return{\n                ...state,\n                loading: true,\n                error: false,\n            }\n        case GET_WIN_NUMS_SUCCESS:\n            return{\n                ...state,\n                loading: false,\n                data: payload\n            }\n        case GET_WIN_NUMS_ERROR:\n            return{\n                ...state,\n                loading: false,\n                error: payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default winNumsReducer","const winNumsCombosInitialState = {\n    loading: false,\n    data: [],\n    error: null\n}\n\nexport default winNumsCombosInitialState","export const GET_WIN_NUMS_COMBOS_LOADING = 'GET_WIN_NUMS_COMBOS_LOADING'\nexport const GET_WIN_NUMS_COMBOS_SUCCESS = 'GET_WIN_NUMS_COMBOS_SUCCESS'\nexport const GET_WIN_NUMS_COMBOS_ERROR = 'GET_WIN_NUMS_COMBOS_ERROR'\n\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH'\n","import { CLEAR_SEARCH, GET_WIN_NUMS_COMBOS_ERROR, GET_WIN_NUMS_COMBOS_LOADING, GET_WIN_NUMS_COMBOS_SUCCESS } from './winNumsCombosActions'\nimport winNumsCombosInitialState from './winNumsCombosInitialState'\n\nconst winNumsCombosReducer = (state, {type, payload}) => {\n    switch(type){\n        case GET_WIN_NUMS_COMBOS_LOADING:\n            return{\n                ...state,\n                loading: true,\n                error: false,\n            }\n        case GET_WIN_NUMS_COMBOS_SUCCESS:\n            return{\n                ...state,\n                loading: false,\n                data: payload\n            }\n        case GET_WIN_NUMS_COMBOS_ERROR:\n            return{\n                ...state,\n                loading: false,\n                error: payload\n            }\n\n        case CLEAR_SEARCH:{\n            return{\n                ...winNumsCombosInitialState\n            }\n        }\n\n        default:\n            return state\n    }\n}\n\nexport default winNumsCombosReducer","import React, { createContext, useReducer, useState } from 'react'\nimport topOccursInitialState from './topoccurrence/topOccursInitialState'\nimport topOccursReducer from './topoccurrence/topOccursReducer'\nimport winNumsInitialState from './winnums/winNumsInitialState'\nimport winNumsReducer from './winnums/winNumsReducer'\nimport winNumsCombosInitialState from './winnumscombo/winNumsCombosInitialState'\nimport winNumsCombosReducer from './winnumscombo/winNumsCombosReducer'\n\nexport const Context = createContext({})\n\nexport const Provider = ({children}) => {\n    const [winNumsState, winNumsDispatch] = useReducer(winNumsReducer,winNumsInitialState)\n    const [winNumsCombosState, winNumsCombosDispatch] = useReducer(winNumsCombosReducer,winNumsCombosInitialState)\n    const [topOccursState, topOccursDispatch] = useReducer(topOccursReducer,topOccursInitialState)\n    const [game, setGame] = useState('megamillions')\n    const [search, setSearch] = useState('')\n    \n    return (\n       <Context.Provider\n        value={{\n            winNumsState,\n            winNumsDispatch,\n            winNumsCombosState,\n            winNumsCombosDispatch,\n            topOccursState,\n            topOccursDispatch,\n            game,\n            setGame,\n            search,\n            setSearch\n            \n        }}\n       >\n           {children}\n       </Context.Provider>\n    )\n}\n\n","import axios from 'axios'\n\nconst axiosHelper = () => {\n    const baseURL = process.env.REACT_APP_BACKEND_URL;\n    const headers = {}   \n\n    const axiosHelper = axios.create({\n        baseURL,\n        headers\n    })\n\n    axiosHelper.interceptors.response.use(\n        (res) => new Promise((resolve) => {\n            resolve(res)\n        }),\n        (err) => {\n            return new Promise((reject) => {\n                reject(err);\n            });\n        }\n    )\n    return axiosHelper\n}\n\nexport default axiosHelper","import { CONNECTION_ERROR} from '../contexts/winnums/winNumsActions'\nimport { GET_WIN_NUMS_COMBOS_ERROR, GET_WIN_NUMS_COMBOS_LOADING, GET_WIN_NUMS_COMBOS_SUCCESS } from '../contexts/winnumscombo/winNumsCombosActions'\nimport axiosHelper from '../utils/axiosHelper'\n\nconst getWinNumsCombos = (game, numbers) => (dispatch) => {\n    dispatch({\n        type: GET_WIN_NUMS_COMBOS_LOADING\n    })\n  \n    axiosHelper()\n    .get(`/lottery/winning-numbers-combinations/?game=${game}&numbers=${numbers}`)\n    .then((res) => {\n        dispatch({\n            type: GET_WIN_NUMS_COMBOS_SUCCESS,\n            payload: res.data\n        })\n    })\n    .catch(err => {\n        dispatch({\n            type: GET_WIN_NUMS_COMBOS_ERROR,\n            payload: err.response ? err.response.data : CONNECTION_ERROR\n        })\n    })\n}\n\nexport default getWinNumsCombos\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Button, Dropdown, Form, Menu } from 'semantic-ui-react'\nimport { Context } from '../contexts/Provider'\nimport { CLEAR_SEARCH } from '../contexts/winnumscombo/winNumsCombosActions'\nimport getWinNumsCombos from '../services/getWinNumsCombos'\nimport { cleanedSearchNumbers } from '../utils/appUtils'\n\nconst NavBar = () => {\n    const { winNumsCombosDispatch, game, setGame, search, setSearch} = useContext(Context)\n  \n    const gameOptions = [\n        {key: 'megamillions', text: 'Mega Millions', value:'megamillions'},\n        {key: 'powerball', text: 'Powerball', value:'powerball'},\n    ]\n\n    const onFieldChange = (e, { value }) => {\n        setSearch(value)\n        \n    }\n\n    const onFormSubmit = () => {\n        const searchNumbers = cleanedSearchNumbers(search)\n        getWinNumsCombos(game, searchNumbers)(winNumsCombosDispatch)\n    }\n\n    const onGameChange =(e, {value}) => {\n        setGame(value)\n        setSearch('')\n    }\n \n    const searchNumbersValid = !search?.length\n\n    useEffect(() => {\n        if (!!search) {\n            winNumsCombosDispatch({\n                type: CLEAR_SEARCH\n            })\n        }\n        \n    }, [search])\n\n    return (\n        <Menu secondary pointing>\n            <Menu.Item header style={{ fontSize: 30 }}>\n                Lotto Combos\n            </Menu.Item>\n            <Menu.Item />\n            <Menu.Item position=\"left\" />\n            <Menu.Item id=\"comboSearch\" name='combosSearch'>\n                <Form>\n                    <Form.Group>\n                        <Dropdown options={gameOptions} defaultValue={game} simple item onChange={onGameChange}/>\n                        <Form.Input style={{ width: 350 }} placeholder=\"Enter numbers to search combinations. 10 20\" onChange={onFieldChange} value={search}/>\n                        <Button type=\"submit\" primary onClick={onFormSubmit} disabled={searchNumbersValid}>Search</Button>\n                    </Form.Group>\n                </Form>\n            </Menu.Item>\n            <Menu.Item as={NavLink} to=\"/winning-numbers\" position=\"right\">\n                Winning Numbers\n            </Menu.Item>\n            <Menu.Item as={NavLink} to=\"/top-occurrence\" >\n                Top Occurrence\n            </Menu.Item>\n            <Menu.Item as={NavLink} to=\"/about\">\n\n                About\n            </Menu.Item>\n        </Menu>\n    )\n}\n\nexport default NavBar\n","export const cleanedSearchNumbers = (search) => {\n    const regex = /[.,\\s]/g;\n    let cleanedSearch = search.trim().replace(regex, ',')\n    cleanedSearch = cleanedSearch.split(',').sort() // 30, 20 -> 20, 30\n    cleanedSearch = cleanedSearch.map(item => item.padStart(2, '0')).join(', ') // leading 0 and add comma 44, 2 -> 02, 44\n    return cleanedSearch\n\n}\n\nexport const localDateTime = (date) => new Date(date).toLocaleDateString();","import React from 'react'\nimport { Container, Header, Message, Placeholder, Table } from 'semantic-ui-react'\n\n\nconst WinNumsCombosList = (state) => {\n    const { loading, data } = state\n\n    return (\n        <Container style={{ marginBottom: 10 }}>\n            <Header>Winning Numbers Combinations</Header>\n            {loading && (\n                <Placeholder>\n                    <Placeholder.Header image>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                    </Placeholder.Header>\n                    <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                    </Placeholder.Paragraph>\n                </Placeholder>\n            )}\n            {!loading && data && data.count > 0 && (\n                <Table celled>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell textAlign=\"center\" >Combinations (*ball)</Table.HeaderCell>\n                            <Table.HeaderCell textAlign=\"center\" >Occurrences / {data.results[0].number_of_draws} plays</Table.HeaderCell>\n                            <Table.HeaderCell textAlign=\"center\" >Possibility %</Table.HeaderCell>\n\n                        </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {data && data.results?.map((nums) => (\n                            <Table.Row key={nums.winning_numbers_combination}>\n                                <Table.Cell textAlign=\"center\" >{nums.winning_numbers_combination}</Table.Cell>\n                                <Table.Cell textAlign=\"center\" >{nums.winning_numbers_combination_occurrence}</Table.Cell>\n                                <Table.Cell textAlign=\"center\" >{nums.possibility}</Table.Cell>\n                            </Table.Row>\n                        ))\n                        }\n                    </Table.Body>\n                </Table>\n            )}\n            {!loading && data && data.count === 0 && <Message content=\"No combinations.\" />}\n        </Container>\n    )\n}\n\nexport default WinNumsCombosList\n","\nimport { GET_TOP_OCCURS_ERROR, GET_TOP_OCCURS_LOADING, GET_TOP_OCCURS_SUCCESS } from '../contexts/topoccurrence/topOccursActions'\nimport { CONNECTION_ERROR} from '../contexts/winnums/winNumsActions'\nimport axiosHelper from '../utils/axiosHelper'\n\nconst getTopOccurs = (game) => (dispatch) => {\n    dispatch({\n        type: GET_TOP_OCCURS_LOADING\n    })\n  \n    axiosHelper()\n    .get(`/lottery/winning-numbers-combinations/?game=${game}&top-occurrence=True`)\n    .then((res) => {\n        dispatch({\n            type: GET_TOP_OCCURS_SUCCESS,\n            payload: res.data\n        })\n    })\n    .catch(err => {\n        dispatch({\n            type: GET_TOP_OCCURS_ERROR,\n            payload: err.response ? err.response.data : CONNECTION_ERROR\n        })\n    })\n}\n\nexport default getTopOccurs\n","import { CONNECTION_ERROR, GET_WIN_NUMS_ERROR, GET_WIN_NUMS_LOADING, GET_WIN_NUMS_SUCCESS } from '../contexts/winnums/winNumsActions'\nimport axiosHelper from '../utils/axiosHelper'\n\nconst getWinNums = (game) => (dispatch) => {\n    dispatch({\n        type: GET_WIN_NUMS_LOADING\n    })\n\n    axiosHelper()\n    .get(`/lottery/${game}/`)\n    .then((res) => {\n        dispatch({\n            type: GET_WIN_NUMS_SUCCESS,\n            payload: res.data\n        })\n    })\n    .catch(err => {\n        dispatch({\n            type: GET_WIN_NUMS_ERROR,\n            payload: err.response ? err.response.data : CONNECTION_ERROR\n        })\n    })\n}\n\nexport default getWinNums\n","import React from 'react'\nimport { Container, Header, Message, Placeholder, Table } from 'semantic-ui-react'\n\nimport { localDateTime } from '../utils/appUtils'\n\nconst WinNumsList = (state) => {\n    const { loading, data } = state\n\n    return (\n        <Container style={{marginBottom: 10}}>\n            <Header >Winning Numbers </Header>\n            {loading && (\n\n                <Placeholder>\n                    <Placeholder.Header image>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                    </Placeholder.Header>\n                    <Placeholder.Paragraph>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                    </Placeholder.Paragraph>\n                </Placeholder>\n\n            )}\n\n            {!loading && data && data.count > 0 && (\n                <Table celled>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell textAlign=\"center\" >Draw Date</Table.HeaderCell>\n                            <Table.HeaderCell textAlign=\"center\" >Winning Numbers</Table.HeaderCell>\n                            <Table.HeaderCell textAlign=\"center\" >*Ball</Table.HeaderCell>\n                            <Table.HeaderCell textAlign=\"center\" >Multiplier</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {data && data.results?.map((nums) => (\n                            <Table.Row key={nums.draw_date}>\n\n                                <Table.Cell textAlign=\"center\" >{localDateTime(nums.draw_date)}</Table.Cell>\n                                <Table.Cell textAlign=\"center\" >{nums.winning_numbers}</Table.Cell>\n                                <Table.Cell textAlign=\"center\" >{nums.ball}</Table.Cell>\n                                <Table.Cell textAlign=\"center\" >{nums.multiplier.replace(/^0+/, '')} x</Table.Cell>\n                            </Table.Row>\n                        ))\n                        }\n                    </Table.Body>\n                </Table>) }\n            {!loading && data && data.count === 0 &&  <Message content=\"No winning numbers\" />}\n       </Container>\n    )\n}\n\nexport default WinNumsList\n","import AboutPage from \"../views/AboutPage\"\nimport OccursPage from \"../views/OccursPage\"\nimport WinNumsPage from \"../views/WinNumsPage\"\n\nconst routes = [\n    {\n        path: '/top-occurrence',\n        component: OccursPage,\n        title: 'Top Occurrence',\n    },{\n        path: '/about',\n        component: AboutPage,\n        title: 'About',\n    },\n    {\n        path: '/winning-numbers',\n        component: WinNumsPage,\n        title: 'Winning Numbers',\n    },\n]\n\nexport default routes","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react'\nimport { Context } from '../contexts/Provider'\nimport getTopOccurs from '../services/getTopOccurs'\nimport NavBar from '../components/NavBar'\nimport WinNumsCombosList from '../components/WinNumsCombosList'\nimport Footer from '../components/Footer'\n\n\nconst OccursPage = () => {\n    const { topOccursState, topOccursDispatch, winNumsCombosState, game, search } = useContext(Context)\n \n    const searchNumbersValid = !!search\n\n    useEffect(() => {\n        getTopOccurs(game)(topOccursDispatch) \n    }, [game]);\n\n    return (\n        <>\n            <NavBar />\n            {searchNumbersValid ? <WinNumsCombosList {...winNumsCombosState}  /> : <WinNumsCombosList {...topOccursState} />}\n            <div id=\"footer\">\n                <Footer />\n            </div>\n        </>\n    )\n}\n\nexport default OccursPage\n","import React, { useContext, useEffect } from 'react'\nimport { Container, Header } from 'semantic-ui-react'\nimport Footer from '../components/Footer'\nimport NavBar from '../components/NavBar'\nimport WinNumsCombosList from '../components/WinNumsCombosList'\nimport { Context } from '../contexts/Provider'\nimport getTopOccurs from '../services/getTopOccurs'\n\nconst AboutPage = () => {\n    const { winNumsCombosState, topOccursDispatch, game, search } = useContext(Context)\n    const searchNumbersValid = !!search\n    \n    useEffect(() => {\n        getTopOccurs(game)(topOccursDispatch) \n    }, [game, topOccursDispatch]);\n\n    return (\n        <>\n            <NavBar />\n            {searchNumbersValid ? \n                <WinNumsCombosList {...winNumsCombosState} /> :\n                <Container text textAlign='justified'>\n                    <Header>About Lotto Combos</Header>\n                    <p>\n                        Lotto Combos analyzes the number of occurrences from combinations of lottery winning numbers. <br /><br />\n                        Occurrences are updated daily based on data from https://data.ny.gov/. <br /><br />\n                        This app does neither promote playing the games nor predicting future winning numbers, so use it at your own risk.\n                    </p>\n                </Container>\n\n\n            }\n\n\n            <div id=\"footer\">\n                <Footer />\n            </div>\n\n        </>\n\n    )\n}\n\nexport default AboutPage\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react'\nimport { Context } from '../contexts/Provider'\nimport getWinNums from '../services/getWinNums'\nimport NavBar from '../components/NavBar'\nimport WinNumsList from '../components/WinNumsList'\nimport Footer from '../components/Footer'\nimport WinNumsCombosList from '../components/WinNumsCombosList'\n\nconst WinNumsPage = () => {\n    const { winNumsState, winNumsDispatch, winNumsCombosState, game, search } = useContext(Context)\n\n    const searchNumbersValid = !!search\n\n    useEffect(() => {\n        getWinNums(game)(winNumsDispatch);\n    }, [game]);\n\n    return (\n        <>\n            <NavBar />\n            {searchNumbersValid ? <WinNumsCombosList {...winNumsCombosState} /> : <WinNumsList {...winNumsState} />}\n            <div id=\"footer\">\n                <Footer />\n            </div>\n        </>\n    )\n}\n\nexport default WinNumsPage\n","import React from 'react'\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom'\nimport RenderRoute from './components/RenderRoute'\nimport routes from './components/routes'\nimport { Provider } from './contexts/Provider'\nimport './App.css'\n\nconst App = () => {\n    return (\n        <div className=\"flex-container\">\n          <Provider>\n\n          <BrowserRouter>\n            <Switch>\n              {routes.map(route => <RenderRoute {...route} key={route.title}/>)}\n              <Redirect from=\"/\" to=\"/winning-numbers\" />\n            </Switch>\n          </BrowserRouter>\n          </Provider>\n          \n            \n        </div>\n    )\n}\n\n\n\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}